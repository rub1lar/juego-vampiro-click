

@import url('https://fonts.googleapis.com/css2?family=Rubik+Bubbles&display=swap');



@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');
body {
  min-height: 100vh;
  overflow-x: hidden;
  
}
.title {
  font-weight: 70;
  color: red;
  font-family: 'Rubik Bubbles', cursive;
  font-size: 3rem;
  text-align: center;
}

.parallax {
position: relative;
display: flex;
justify-content: center;
align-items:center ;
height: 100vh;
background: url("img/background.png") no-repeat;
background-size: cover;
background-position: center;
background-attachment: fixed;
}

.parallax img {
position: absolute;
top:0;
left: 0;
width: 100%;
pointer-events: none;

}
.parallax img#gate-left{
  position: fixed;
transform: translateX(-282px);
}

.parallax img#gate-right{
  position: fixed;

  transform: translateX(305px);
  }

  .sec {
    
    position: relative;
    background: #020912;
    padding: 30px 100px;
  }
  .sec2 {
    position: relative;
    background: #020912;
    padding: 30px 100px;
  }
  .instrucciones{
    font-family: 'Roboto', sans-serif;
    text-align: center;
    font-size: 3em;
    color: #fff;
    margin-bottom: 10px;
  }
.sec p{
margin-left:4rem;
margin-right:4rem;

  font-family: 'Roboto', sans-serif;
  font-size: 2em;
  color: #fff;
  font-weight: 300;
  text-align: justify;
}
  
.imagens {
    padding-top: 1rem;
    z-index :100;
    display: flex;
 
    flex-wrap: wrap;
    margin: auto;
    justify-content: center;
    align-items: center;
   background-size: contain;
}

.tamaño {

 
  display: flex !important;
    -webkit-box-shadow: 4px -9px 34px 39px rgba(14,14,15,1);
    -moz-box-shadow: 4px -9px 34px 39px rgba(14,14,15,1);
    box-shadow: 4px -9px 34px 39px rgba(14,14,15,1);
    cursor: pointer;
    transition: 4s;    border: solid;
    border-color: rgb(10, 51, 149);
    border-radius: 1rem;
  
 max-width: 500px;
 min-width: none;
}
.imagens:hover{
    transform: scale(1.1);
    transition: 2s;
}
.audio {
  display: flex;

  color: rgb(0, 0, 0) !important;
}
.player {
  display: flex;
  flex-direction: column;
  align-items: center;
  align-content: center;
}
.titulo {
  color: antiquewhite;
  padding-bottom: 1rem;
  font-family: 'Rubik Bubbles', cursive;
    display:block;
text-align: center;
font-weight: 370;

}
.titulo2 { display: inline-block;
  font-weight: 370;
  font-family: 'Rubik Bubbles', cursive;
    font-size: 2rem;
    color:aliceblue;
}
.main-cont {

    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;

}


.main-cont{
    background-size: cover;
}
canvas {
    background-image:url("img/fondo.jpg") ;
    background-size: cover;
}
/* //cronomertro */


.minutos {
  font-weight: 320;
  font-family: 'Rubik Bubbles', cursive;
}

.segundos {
  font-weight: 320;
  font-family: 'Rubik Bubbles', cursive;
}

.centesimas{
  font-weight: 320;
  font-family: 'Rubik Bubbles', cursive;
}

.alert {
  color: aliceblue !important;
  border-radius: 2rem !important;
  font-weight: 300;
  font-family: 'Rubik Bubbles', cursive;

}
/*** ESTILOS BOTÓN GROW ELLIPSE ***/
.ov-btn-grow-ellipse {
    background: #fff; /* color de fondo */
    color: #4741d7; /* color de fuente */
    border: 2px solid #4741d7; /* tamaño y color de borde */
    padding: 16px 20px;
    border-radius: 40px; /* redondear bordes */
    position: relative;
    z-index: 1;
    overflow: hidden;
    display: inline-block;
  }
  .ov-btn-grow-ellipse:hover {
    color: rgb(10, 10, 10);/* color de fuente hover */
  }
  .ov-btn-grow-ellipse::after {
    content: "";
    background: #4741d7; /* color de fondo hover */
    position: absolute;
    z-index: -1;
    padding: 16px 20px;
    display: block;
    border-radius: 50%;
    left: -50%;
    right: -50%;
    top: -150%;
    bottom: -150%;
    transform: scale(0, 0);
    transition: all 0.4s ease;
  }
  .ov-btn-grow-ellipse:hover::after {
    transition: all 0.6s ease-out;
    transform: scale(1, 1);
  }
 .crono {
  position: absolute;
} 
  .playcrono {
    
    max-height: 300px;

    max-width: 400px;
    margin: 3rem;
    -webkit-box-shadow: 4px -9px 34px 39px rgba(14,14,15,1);
    -moz-box-shadow: 4px -9px 34px 39px rgba(14,14,15,1);
    box-shadow: 4px -9px 34px 39px rgba(14,14,15,1);
    width: 350px;
color: antiquewhite;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    align-items:center ;
    flex-wrap: wrap;
    border-radius: 15px;
    border-color: black;
    background-color: rgb(22, 22, 22);
  }

/* 
  bOTON PLAY */
  .button {
    background-color: rgb(22, 22, 22);

    box-sizing: border-box;
    width: 0;
    height: 74px;
    border-style: solid;
    border-width: 37px 0 37px 60px;
    border-color: transparent transparent transparent #100cdb;
    cursor: pointer;
    will-change: border-width;
    transition: all .2s ease;
  }
    .paused {
      border-style: double;
      border-width: 0px 0 0px 60px;
    }
    
    button:hover {
      border-color: transparent transparent transparent #221be1;
    }
  
    .total{
      display: flex;
      flex-wrap: wrap;
    }

   @media (max-width: 480px) {
/*     //puedo hacer una funcion que cambie todo el canvas en el html y ponga otro cambas con un width: 
    y un heit mas chico para celular, centrado mas en el medio para abarcar mas tipos de celulares
    pero para eso tengo que detectar que paso menos de 400 px quiza se pueda con un evento .
    el windows.onresize detecta pero yto quiero desde una resolucion en especifica que detecte;
    ;;; */
    }